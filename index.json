[{"content":"","date":"27 August 2025","externalUrl":null,"permalink":"/","section":"0xInfinity.dev","summary":"","title":"0xInfinity.dev","type":"page"},{"content":"","date":"27 August 2025","externalUrl":null,"permalink":"/en/","section":"Ens","summary":"","title":"Ens","type":"en"},{"content":"I am a cybersecurity \u0026amp; cybersecurity governance enthusiast, who mainly focuses on defensive cybersecurity. In this website, I mainly focus on topics like;\nCompliance \u0026amp; Governance (NIS2, GDPR, etc.) Hack The Box Machine walkthroughs (only retired machines) Critical Analyses of HTB Machine’s and what they contribute to our security understanding Defensive Security Strategies — A concious approach to cybersecurity, changing norms Other programming projects I do in my free time This blog is dedicated to ethical security learning and follows legal \u0026amp; responsible disclosure guidelines. All content is for educational purposes only—I do not encourage or promote unauthorized hacking.\nFor privacy reasons, I do not share any personal information on this website, however, feel free to reach out to me through the contact form.\nThis website takes GDPR compliance and data privacy seriously. This website aims to follow GDPR principles and best practices, read more in privacy policy.\n","date":"27 August 2025","externalUrl":null,"permalink":"/en/about/","section":"Ens","summary":"","title":"WHOAMI","type":"en"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/en/posts/","section":"Ens","summary":"","title":"Blog","type":"en"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/blog-post/","section":"Categories","summary":"","title":"Blog Post","type":"categories"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/blog-post/","section":"Tags","summary":"","title":"Blog Post","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/convex/","section":"Tags","summary":"","title":"Convex","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/convex.dev/","section":"Tags","summary":"","title":"Convex.dev","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/cybersecurity/","section":"Categories","summary":"","title":"Cybersecurity","type":"categories"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/dev-log/","section":"Categories","summary":"","title":"Dev Log","type":"categories"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/dev-log/","section":"Tags","summary":"","title":"Dev Log","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/javascript/","section":"Tags","summary":"","title":"Javascript","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/categories/privacy/","section":"Categories","summary":"","title":"Privacy","type":"categories"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/privacy/","section":"Tags","summary":"","title":"Privacy","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/react/","section":"Tags","summary":"","title":"React","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/react.ts/","section":"Tags","summary":"","title":"React.ts","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/secure-coding/","section":"Tags","summary":"","title":"Secure Coding","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/secure-web-development/","section":"Tags","summary":"","title":"Secure Web Development","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"18 August 2025","externalUrl":null,"permalink":"/tags/ts/","section":"Tags","summary":"","title":"TS","type":"tags"},{"content":"Dear Surprisingly High Number of Daily Human Visitors,\nFor quite some time, I have been working on developing a new website. I would like to share a couple of things about it, including screenshots. The website in question is going to replace this website at this domain, https[:]//0xinfinity.dev.\nThe main purpose of this website is to share my opinion and journey on cybersecurity and cybersecurity governance. Therefore I would like to discuss a bit about my design choices, and principles, with a specific focus on cybersecurity and ethical cybersecurity.\nPrivacy / IP Collection Stance # TL;DR # The web application does not have access to your IP address through Convex backend. Instead, it uses session-based security tracking system. Your IP address is only stored for 14-30 days on infrastructure-level Access Logs.\nInfrastructure-level Privacy # Most websites, mine included, record your IP address when you access it. These logs are called “Access Logs”, and generated by an underlying web server (like NGINX, Apache2). Each URI you visit is recorded along with your Browser User-Agent, IP address, and time-stamp of when you accessed the resource in question. In this new website, these logs are going to be stored for a short and a reasonable amount of time. This is a standard procedure to prevent spam and abuse, and facilitate forensic analysis of potential evidence.\nApplication-level Privacy # However, what is an exception is that the website application itself does not use IP addresses as part of its security mitigation and response protocols. In fact, the application itself does not receive your IP address at all. The framework the website uses, Convex, does not reveal your IP address to developers upon connections made between your browser, and backend (Convex).\nAim is to adhere to the \u0026ldquo;Data Minimization\u0026rdquo; principle of GDPR, while using a very strict and narrow definition of \u0026ldquo;Legitimate Interest\u0026rdquo; to prevent \u0026ldquo;spam and abuse\u0026rdquo;.\nIn line with GDPR’s Data Minimization principle, my backend code is intentionally designed to never access your IP address. Having said that, Convex does not give developers access to the client IP addresses. You can read more in Convex’s discord channel.\nNaturally, Convex platform infrastructure will process your IP address for the purposes of basic functionality. The Convex instance is self-hosted, therefore, as it is one of the principles of GDPR, data residency is within the EU. Self-hosting Convex also ensures that data stored is solely basic functionality and Access Logs-related.\nWhile it is technically possible to send the IP from the frontend, it is unreliable—and more importantly, it raises privacy concerns.\nThere will also be hover pop-ups on buttons that will explicitly record security-related data. The screenshot below, is just an example and will be removed on production. Of course, I do not record data other than what is necessary on a mere “Read more” button click. Although depending on the security state and security level of the website, processing and privacy measures may dynamically change—which includes dynamic changes in the UI. I will cover the security policy in the next section. This post is meant to demonstrate ethical considerations. There are many other implemented GDPR necessities and ethical considerations like User Rights (Access, Rectification, Erasure, Restriction of Processing, Objection, Data Portability).\nSecurity # This website implements two distinct layers of security:\nInfrastructure-level (IP-based Access Logs), which incorporates my own C++ CTI tool. Application-level (session/account-based), records session IDs, account IDs, backend activity, and incorporates rate-limiting. Infrastructure-level Security # As I have mentioned previously, this website will not use your IP address on an application level. This raises the question: “What is the point of this if you store Access Logs?”. To answer that question, we must first explore what happens to the Access Logs.\nIn real time, after an entry is processed, the Access Logs are transferred (on a dedicated, highly secured internal network with strict access controls) to another machine—to preserve Integrity. I am also currently building a custom CTI tool that analyzes these logs for forensic analysis.\nThis CTI tool is a modular native C++ application, upon administrator interaction, correlates timestamps of session IDs to IP addresses and scores it with rules (that look for patterns indicative of network scanning or malicious activity and known attack signature) that remain undisclosed for security purposes. If an IP looks suspicious based on internal scoring, it will then be checked against AbuseIPDB. This is only one functionality of my CTI application, which will be made open-source soon, and will be discussed in a separate blog post.\nApplication-level Security # On the second layer, however, there are no IP retrieval or checks through my code. This layer will store session ID associated with your currently opened tab, and if logged in, to your account. Do note, if you have an account, your account will contain a list of your past session IDs. Alongside your session ID and account ID, your function calls will be audited for security and auditing purposes. Rate limiting is also in place, so if something starts sending repeated requests, it can throttle accounts, sessions, or the whole application to keep things stable.\nAs GDPR requires a reasonable amount of data-retention period, if your session and IP address is not flagged, your personal data is automatically deleted between 14-30 days. This deletion excludes your account information, if you have one.\nDynamic Security System # The application layer also utilizes a rules-based security system that performs checks against incoming traffic. The system may return that a query is potentially malicious.\nIf such an event is identified, website administrators (me, myself, and I), will receive notifications through email and on admin dashboard. After receiving the alert, I can then take further quick action. These actions can include, setting the “Under Attack Mode” on, and increasing website security level-which affects privacy-processing. A thorough description of each security level of the website, changes in privacy-data processing, will be explained in detail, in the Privacy Policy, Technologies Used, and Emergency Policy pages.\nThis is just a surface-level overview. There are many other security checks, other defense-in-depth strategies, and not-mentioned basic security necessities like MFA, DDoS Protection, Server Hardening.\nImaginary Scenario: Attempted Breach # Explanation: A Threat Actor (TA) progressively injects malicious queries to sensitive admin-only backend functions. TA attempts arbitrary code execution, and also tries to bypass authentication procedures.\nAutomated Incident Response: Our vector search identifies unusual direct calls. These actions are also not usually triggered on anonymous or user-level sessions, the action is only expected to be triggered by logged-in and passkey authorized administrators. This, combined with clearly malicious queries, will automatically increase website security to a hidden high security level and immediately send a critical notification to website administrators.\nAdministrator Response: The administrator can use the CTI tool to quickly and permanently block IPs using firewall rules. In a high-level Incident Response scenario, and if attackers manage to bypass such firewall rules, there are three options:\nLock all backend functions. Transition to highest level of website security and information processing, and/or display an “under attack” banner. Shutdown website entirely. This scenario inspired by the API5:2023 BFLA from OWASP Top 10. Real-life cases: Github Actions (2022), T-Mobile (2021)\nAre these overkill for a personal blog? # Yes, it is.\nThe point of this system revolves around these three things:\nTo learn how to defend complex systems / implement defense-in-depth strategies. To capture a better picture of GDPR / gain hands-on experience with GDPR. To create a system which uses privacy-by-design and security-by-design principles, both in policy and code. If you read up until this point, thank you very much.\nA Data Protection Impact Assessment (DPIA) will also be conducted, as the website incorporates security mechanisms that may require it under GDPR.\nKind regards,\nHuman Website Administrator\n","date":"18 August 2025","externalUrl":null,"permalink":"/en/posts/under-dev-new-website/","section":"Ens","summary":"For quite some time, I have been working on developing a new website. I would like to share a couple of things about it, including screenshots. The website in question is going to replace this website at this domain, https[:]//0xinfinity.dev.","title":"Under Development: New Website","type":"en"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/alert/","section":"Tags","summary":"","title":"Alert","type":"tags"},{"content":" Unauthorized hacking is illegal. Read Disclaimer for more information. A critical analysis post of this machine will be released. The critical analysis will focus on what the vulnerabilities here mean for organizations and corporations, and what the best practices are for avoiding these vulnerabilities.\nSummary # Alert is an easy-difficulty Linux machine that showcases Stored Client-Side Cross-Side Scripting (XSS), which leads to Server-Side exploitation. This vulnerability is triggered by uploading malicious XSS payload through the webpage, which is later executed when shared through the contact form. After manual directory enumeration of apache2 configuration, .htpasswd document containing password hash of user albert is found and cracked using hashcat. Privilege escalation is then possible by exploiting a misconfigured directory that allows modifications, but is accessible only on localhost. However, the private website that runs on this directory is executed with root privileges. The misconfiguration is then exploited by uploading a PHP shell to the directory which is then accessed via browser to gain elevated privileges.\nSkills Needed: # Cross-Side Scripting Basic Linux and Privilege Management Knowledge PHP reverse shell Familiarity with default apache2 configurations Enumeration # Port Scan # Scanning the ports of the target using nmap reveals 2 open ports.\nnmap -sC -sV -p- -T4 10.10.11.44 We can see from the results that port 80 uses Apache httpd 2.4.41 and redirects to https://alert.htb/. We also have ssh on port 22.\nAlert.htb Enumeration # After adding the redirect domain to /etc/hosts, we can observe that there is a markdown file upload field.\nFurther navigating to the About Us page also reveals the following message, indicating that the contact form on the website may have an automated system that interacts with the form thus indicating a possible XSS or XSS via interaction. Upon uploading the test script to the Markdown Viewer, and viewing it through the browser we can see that the system allows us to inject javascript code to the website, thus confirming XSS. A manual and automated directory enumeration also revealed additional /messages/, /uploads/, messages.php, visualization.php that exists in this website.\ngobuster dir –url http://alert.htb -w /usr/share/dirb/wordlists/common.txt Subdomain Enumeration # Further subdomain enumeration via wfuzz show that the server uses a subdomain called statistics. (Due note, we have to filter the subdomains by word since it is the only parameter that is static therefore --hw 28)\nwfuzz -u http://alert.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H \u0026#34;Host: FUZZ.alert.htb\u0026#34; --hw 28 Foothold # We can now exploit the previously mentioned XSS vulnerability by uploading a javascript code on the markdown file upload to retrieve contents of files. We first get the contents of messages.php and see its contents, after analyzing it we can see that this path (?file=) is vulnerable to Local File Inclusion (LFI). I have created a simple PHP handler for the purposes of this vulnerability. We then can access /etc/passwd through; Using the same exploit, I then proceeded to retrieve the config files of apache2 (/etc/apache2/sites-enabled/000-default.conf) where we can see the exact location of .htpasswd that restricts the subdomain statistics.alert.htb. After identifying the existence of .htpasswd, we then retrieve it, again, using the same exploit where we receive the user albert and the password hash (clipped in accordance with HTB ToS).\nalbert:\u0026lt;SNIP\u0026gt; We then proceed to retrieve the password through this hash using hashcat.\nhashcat hash.txt --show We then, as it is standard practice to enumerate, try this credentials on SSH port and successfully login as user albert. We can then cat user.txt!!! Privilege Escalation # Now that we have user privileges, we can look up active processes that run on root. There we see an interesting PHP process that uses (is bound to) 127.0.0.1:8080 which runs at /opt/website-monitor.\nps aux | grep \u0026#34;root\u0026#34; We can then locate to /opt/website-monitor/ where we see an interesting misconfiguration of permissions of folder config. We appear to have write privileges, as we are also in the group management. Since the PHP process that runs this script is launched through the user root, we can easily write a simple PHP RCE and get the contents of root.txt. We should also not forget that we have to forward the port 8080 to our host to be able to navigate to the website.\nssh -L 8000:alert.htb:8080 albert@albert.htb We can then locate to our script and get the contents of root.txt. Happy Hunting\n","date":"22 March 2025","externalUrl":null,"permalink":"/en/walkthroughs/alert-htb/","section":"Ens","summary":"Alert is an easy-difficulty Linux machine that showcases Stored Client-Side Cross-Side Scripting (XSS), which leads to Server-Side exploitation for initial access. Privilege escalation is then possible through a misconfigured directory as the user.","title":"Alert Walkthrough - HTB","type":"en"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/categories/hack-the-box/","section":"Categories","summary":"","title":"Hack the Box","type":"categories"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/hack-the-box/","section":"Tags","summary":"","title":"Hack the Box","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/htb/","section":"Tags","summary":"","title":"HTB","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/labs/","section":"Tags","summary":"","title":"Labs","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/categories/machine/","section":"Categories","summary":"","title":"Machine","type":"categories"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/machine/","section":"Tags","summary":"","title":"Machine","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/penetration-testing/","section":"Tags","summary":"","title":"Penetration Testing","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/categories/walkthrough/","section":"Categories","summary":"","title":"Walkthrough","type":"categories"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/walkthrough/","section":"Tags","summary":"","title":"Walkthrough","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/en/walkthroughs/","section":"Ens","summary":"","title":"Walkthroughs","type":"en"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/write-up/","section":"Tags","summary":"","title":"Write-Up","type":"tags"},{"content":"","date":"22 March 2025","externalUrl":null,"permalink":"/tags/writeup/","section":"Tags","summary":"","title":"Writeup","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":" Communication Method Tag Display Name Discord 0xendlessbanter 0x221E ","externalUrl":null,"permalink":"/en/contact/","section":"Ens","summary":"","title":"Contact","type":"en"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]